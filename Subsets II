class Solution {
public:
   void solve(vector<int> & nums , vector<int> &vec , set<vector<int>> &st , int index){
         if(index >= nums.size()){
            st.insert(vec);
            return;
         }

         vec.push_back(nums[index]);
         solve(nums , vec , st , index + 1);
         
         vec.pop_back();


         while(index + 1 < nums.size() && nums[index] == nums[index + 1]) {
            index++;
         }

         solve(nums , vec , st , index + 1);

    }
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        vector<int> vec;
        set<vector<int>> st;
        
        sort(nums.begin() , nums.end());

        solve(nums , vec , st , 0);
        
        vector<vector<int>> ans(st.begin(), st.end());
        
        return ans;
    }
};
